<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Shadows in real time</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type><LINK 
rel=stylesheet type=text/css href="../data/style.css">
<META name=GENERATOR content="MSHTML 8.00.6001.23536"></HEAD>
<BODY>
<DIV align=justify>
<H1 class=pagetitle>Lesson 13 <BR>Shadows in real time </H1><A><B>Level:</B> 
medium<A> <BR><A><B>Version of the Xtreme3D:</B> 3.0.x</A> <BR><A><B>Author:</B> 
Gecko</A><A class=ntext> <BR><BR>Xtreme3D supports several ways to render 
shadows. Firstly, the shade (and lighting in general) can be �������������� and 
"��������" in the texture - this technique is called the map light 
(Lightmapping). It allows you to get very beautiful and realistic result, but 
the resulting shade will be static. Accordingly, this technique is only 
applicable to the stationary objects - for example, the interiors and 
architecture. In addition, far not all formats of 3D models support the light 
maps, and not all of the 3D editors they can create. <BR><BR>Secondly, there is 
the object of the shadow plane (shadow plane). It all looks like a normal entity 
plane, except that the other objects can throw at him the shadows. The result is 
a very beautiful, but, unfortunately, the flat shadows of the applicable far not 
in all situations. For example, they are of little use if your game level 
consists of the platforms at different heights, or there is no ideal planes (for 
example, in the case of a realistic landscape). There are, however, a number of 
genres, where the shadow plane is justified is, for example, a wide variety of 
sports simulators (football, athletics, mini-golf, bowling, billiards, etc.), 
flat ������������, as well as some of the logical and casual games. 
<BR><BR>There are also two technology rendering shadow volumes - volume shadow 
and shadow mapping. The first is an object that defines the volume, inside of 
which points are in the shade. This method gives a very accurate shadows on any 
distance, but works quite slowly. More promising is the new technique, appeared 
in Xtreme3D 3.0 - shadow maps (shadow mapping). You can very quickly render soft 
shadows - but, the truth, at a limited distance from the camera. <BR><BR>We turn 
first to the shadow plane. Create it very simply: <BR><BR><A 
class=src>ShadowTarget = </A><A class=func2link 
href="../functions/dummycube.htm#DummycubeCreate">DummycubeCreate</A><A 
class=src>(<B>global</B>.scene);</A> <BR><A class=src>ShadowPlane = </A><A 
class=func2link 
href="../functions/shadowplane.htm#ShadowplaneCreate">ShadowplaneCreate</A><A 
class=src>(20, 20, 10, 10, shadowTarget, light, </A><A 
class=constant>c_black</A><A class=src>, 0.5,<B> global</B>.scene);</A> 
<BR><BR>Now all I have to do is add those objects, which should drop shadow, in 
the descendants to The shadowTarget. <BR><BR>To work with the shadow volume 
slightly more difficult: <BR><BR><A>Sv = </A><A class=func2link 
href="../functions/shadowvolume.htm#ShadowvolumeCreate">ShadowvolumeCreate</A><A>(<B>global</B>.scene);</A> 
<BR><A class=func2link 
href="../functions/shadowvolume.htm#ShadowvolumeAddLight">ShadowvolumeAddLight</A><A>(sv, 
light);</A> <BR><BR>Add the objects to be drop shadow, in the descendants of the 
sv. Those objects, which should drop shadow added as follows: <BR><BR><A 
class=func2link 
href="../functions/shadowvolume.htm#ShadowvolumeAddOccluder">ShadowvolumeAddOccluder</A><A>(sv, 
Obj);</A> <BR></A></DIV></BODY></HTML>

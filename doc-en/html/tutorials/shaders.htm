<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Shaders</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type><LINK 
rel=stylesheet type=text/css href="../data/style.css">
<META name=GENERATOR content="MSHTML 8.00.6001.23536"></HEAD>
<BODY>
<DIV align=justify>
<H1 class=pagetitle>18. ShadersLesson 18 <BR>Shaders </H1><A><B>Level:</B> 
experienced<A> <BR><A><B>Version of the Xtreme3D:</B> 3.0.x</A> 
<BR><A><B>Author:</B> Gecko</A><A class=ntext> <BR><BR>One of the most 
interesting features Xtreme3D is a shader. The notion of "shader" here is wider 
than the other engines. Usually this term is used to refer the program to the 
GPU that are performed for each top model, or for each pixel of the model on the 
screen. Such shaders in the Xtreme3D also has a (see next chapter), but in a 
general sense, shader special called, or modifies computer software replaces a 
material to which it is attached. Some of these special effects work, and on the 
old graphics cards that do not support ��������� program, and some are based on 
the built-in engine programs. <BR><BR>Using shaders can be superimposed on the 
object several materials, render the contours of the object, make the object 
embossed or give it the "effect of comic books." Consider all possibilities of 
built-in shaders Xtreme3D within a single lesson is impossible, so we stop at 
the one-������� relief (Bump Shader). <BR><BR>The effect of relief greatly 
increases the realism of models - it is used in the games for more than 10 years 
of age and over the years has become the de-facto standard. ����������� is 
usually achieved by using the method of normal mapping (Normal projection). This 
method is based and Bump Shader in the Xtreme3D. The essence of the normal 
mapping in that normal is set for each point of the surface (in contrast to the 
normal vertex lighting, where the normal set for each of the peaks, and then 
simply interpolated over the surface of the polygon. This is done using normal 
maps normal map) - A special texture, in which the color of pixels compared to 
the normal vectors (RGB = XYZ). Normal Map can be generated from the map heights 
or from ������������������� geometry by tracing - This function is virtually all 
professional packages of 3D-modeling. <BR><BR><IMG src="../data/normalmap.jpg"> 
<BR><BR>The normal map was relatively invariant speed and transfer model (i.e., 
remained unchanged in these transformations), its set in a special space, called 
the space of the tangent (tangent space). In this space, the coordinate axis Z 
is perpendicular to the surface, and the X and Y axes, respectively, are 
mutually perpendicular to the tangents to the surface. The lighting also 
calculated in the space of the tangent - direction of light is transformed in 
this space using a special matrix, which is called TBN on the first letters of 
its components - the tangent and BINORMAL, Normal �������, ���������, normal). 
Normal here - the usual normal tops, and the ������� and ��������� - vectors, 
perpendicular to the normal and perpendicular to each other. These vectors 
calculates the Xtreme3D. Currently, they are supported only for objects of type 
Freeform. <BR><BR>Despite the quite complicated for beginners the theoretical 
base, use the terrain effect in the Xtreme3D is very easy - all the complexity 
of the realization of the hidden under the convenient API. <BR><BR>First, create 
materials with the necessary textures: <BR><A class=func2link 
href="../functions/material.htm#MaterialCreate">MaterialCreate</A><A>('mBumpDiffuse', 
'diffuse.png');</A> <BR><A class=func2link 
href="../functions/material.htm#MaterialCreate">MaterialCreate</A><A>('mBumpNormal', 
'normal.png');&lt;/A <BR><BR>Now create the terrain shader and convey to him the 
textures: <BR><BR><A>Bump </A><A class=func2link 
href="../functions/shader.htm#BumpShaderCreate">BumpShaderCreate =</A><A>();</A> 
<BR><A class=func2link 
href="../functions/shader.htm#BumpShaderSetDiffuseTexture">BumpShaderSetDiffuseTexture</A><A>(bump, 
'mBumpDiffuse');</A> <BR><A class=func2link 
href="../functions/shader.htm#BumpShaderSetNormalTexture">BumpShaderSetNormalTexture</A><A>(bump, 
'mBumpNormal');</A> <BR><A class=func2link 
href="../functions/shader.htm#BumpShaderSetMaxLights">BumpShaderSetMaxLights</A><A>(bump, 
3);</A> <BR><BR>BumpShaderSetMaxLights function defines the number of light 
sources, which should take into account the shader. Recall that the Xtreme3D 
supports up to 8 light sources - the same applies to the terrain shader. 
<BR><BR>Now you can create material and attach to him our shader: <BR><BR><A 
class=func2link 
href="../functions/shader.htm#MaterialCreate">MaterialCreate</A><A>('mBump', 
'');</A> <BR><A class=func2link 
href="../functions/shader.htm#MaterialSetAmbientColor">MaterialSetAmbientColor</A><A>('mBump', 
</A><A class=constant>c_black</A><A>, 1);</A> <BR><A class=func2link 
href="../functions/shader.htm#MaterialSetDiffuseColor">MaterialSetDiffuseColor</A><A>('mBump', 
</A><A class=constant>c_white</A><A>, 1);</A> <BR><A class=func2link 
href="../functions/shader.htm#MaterialSetSpecularColor">MaterialSetSpecularColor</A><A>('mBump', 
</A><A class=constant>c_ltgray</A><A>, 1);</A> <BR><A class=func2link 
href="../functions/shader.htm#MaterialSetShininess">MaterialSetShininess</A><A>('mBump', 
32);</A> <BR><A class=func2link 
href="../functions/shader.htm#MaterialSetShader">MaterialSetShader</A><A>('mBump, 
bump);</A> <BR></DIV></BODY></HTML>

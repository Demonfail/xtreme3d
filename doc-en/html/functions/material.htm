<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Material</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type><LINK 
rel=stylesheet type=text/css href="../data/style.css">
<META name=GENERATOR content="MSHTML 8.00.6001.23536"></HEAD>
<BODY>
<DIV align=justify>
<H1 class=pagetitle>Material </H1><A class=type>Class: TGLMaterialLibrary, 
TGLLibMaterial</A><BR><BR><A>The material in the Xtreme3D is a set of parameters 
of a visual display of the object, united under a unique name on which to change 
these settings. As the name is a string value. The parameters include the use of 
textures, colors, the alpha channel, mixing, compression, filtering, and so on. 
You can create one material and apply it to several objects - changes made to 
the material parameters, automatically affect all of these objects. <BR>The 
library material (Material Library) is called the special design that contains a 
list of the materials. The library can be active or inactive. In the first case, 
to which you can add content, configure it, and applied to the objects. In the 
second case, it is impossible. Since different libraries can contain materials 
with the same name, cannot be made active, two or more of the library at the 
same time. <BR>That the Xtreme3D 3.x now supports GLSL shaders, was redesigned 
��������������������� mechanism (TextureEx). Now every material can have up to 8 
textures - and, more precisely, the texture slots, which can be assigned to the 
texture. The slots are numbered from 0 to 7, the codes correspond to the texture 
blocks, which are passed to the parameters of the GLSL ��������. With the 
support of the two main textures of material also preserved in order to ensure 
backwards compatibility - they are used if the texture assigned to slots 0 
and/or 1. Otherwise, the main textures are ignored, and the material uses 
textures from the slots 0 and/or 1. <BR>Thus, the shader can automatically use 
the texture of the material to which the assigned - and this will not only be 
familiar first (diffuse map) and second (normal map or lighting), but another 6 
arbitrary. However, the majority of standard sizes of 3D models do not support 
this kind of ��������������������� - if you want to download in the Xtreme3D 
models with complex ���������������� materials, you will need to do this using a 
specialized format and write your boot loader for it. <BR>
<HR>
<A name=MaterialLibraryCreate></A>
<H1 class=name>MaterialLibraryCreate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryCreate =</A><A>();</A> <BR><A>Generates a library 
of materials and returns its id.</A> 
<HR>
<A name=MaterialLibraryActivate></A>
<H1 class=name>MaterialLibraryActivate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryActivate =</A><A>( matlib as </A><A 
class=type>real</A> );</A> <BR><A>Activates the library materials. All the rest 
of the library will automatically become inactive.</A> <BR><A>Matlib - id of the 
library materials.</A> 
<HR>
<A name=MaterialLibrarySetTexturePaths></A>
<H1 class=name>MaterialLibrarySetTexturePaths </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialLibrarySetTexturePaths =</A><A>( matlib as </A><A 
class=type>real</A><A>, path as </A><A class=type>string</A> );</A> 
<BR><A>Indicates the library, where by default to download the textures when 
loading the model, containing data about the textures.</A> <BR><A>Matlib - id of 
the library materials</A> <BR><A>Path is the path of ���������.</A> 
<HR>
<A name=MaterialLibraryClear></A>
<H1 class=name>MaterialLibraryClear </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryClear =</A><A>( matlib as </A><A 
class=type>real</A> );</A> <BR><A>Cleans the library, removing from it all 
materials.</A> <BR><A>Matlib - id of the library materials.</A> 
<HR>
<A name=MaterialLibraryDeleteUnused></A>
<H1 class=name>MaterialLibraryDeleteUnused </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryDeleteUnused =</A><A>( matlib as </A><A 
class=type>real</A> );</A> <BR><A>Removes from the library unused materials.</A> 
<BR><A>Matlib - id of the library materials.</A> 
<HR>
<A name=MaterialLibraryHasMaterial></A>
<H1 class=name>MaterialLibraryHasMaterial </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryHasMaterial =</A><A>( matlib as </A><A 
class=type>real</A>, material as </A><A class=type>string</A> );</A> 
<BR><A>Returns true, if the library has material with a given name.</A> 
<BR><A>Matlib - id of the library materials</A> <BR><A>The material is the name 
of the material.</A> 
<HR>
<A name=MaterialLibraryLoadScript></A>
<H1 class=name>MaterialLibraryLoadScript </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLibraryLoadScript =</A><A>( matlib as </A><A 
class=type>real</A>as filename as </A><A class=type>string</A> );</A> 
<BR><A>Loads the script material - that is, creates in the library new material 
according to the textual description of the file.</A> <BR><A>Matlib - id of the 
library materials</A> <BR><A>Filename is the name of the script file.</A> 
<HR>
<A name=MaterialCreate></A>
<H1 class=name>MaterialCreate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialCreate =</A><A>( material,filename as </A><A 
class=type>string</A><A> );</A> <BR><A>Creates a new material in the active 
library. You can specify the path to the texture - Xtreme3D supports BMP, JPG, 
PNG, TGA, DDS (DXT1c, the DXT1a, DXT3, the DXT5). If you leave this value blank, 
a material without texture. <BR>Note that for correct processing of the width 
and height of the texture should correspond to degrees of deuce (256x256, 
512x512, 256x64, 64x128, etc.)</A> <BR><A>Material - the name of the 
material</A> <BR><A>Filename is the path to the texture.</A> 
<HR>
<A name=MaterialAddCubeMap></A>
<H1 class=name>MaterialAddCubeMap </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialAddCubeMap =</A><A>( material as </A><A 
class=type>string</A><A> );</A> <BR><A>Creates the material for projection cubic 
(cubemapping). In this material is used as many as six textures, forming the six 
sides of the imaginary cube surrounding the object. As a result, the effect is 
created fully reflect the subject of the surrounding space. Cubemap-materials 
are typically used for water surfaces and metal products.</A> <BR><A>The 
material is the name of the cubemap-material.</A> 
<HR>
<A name=MaterialCubeMapLoadImage></A>
<H1 class=name>MaterialCubeMapLoadImage </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialCubeMapLoadImage =</A><A>( material,texture as </A><A 
class=type>string</A><A>, ind as </A><A class=type>real</A> );</A> <BR><A>The 
texture loads for a given side of Cuba in the cubemap-material.</A> <BR><A>The 
material is the name of the cubemap-material</A> <BR><A>Texture - path to the 
textures</A> <BR><A>Ind - the index of the Cuba: <BR>0 - Left <BR>1 - Right 
<BR>2 - top <BR>3 - Lower <BR>4 - Rear <BR>5 - Front.</A> 
<HR>
<A name=MaterialCubeMapGenerate></A>
<H1 class=name>MaterialCubeMapGenerate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialCubeMapGenerate =</A><A>( material as </A><A 
class=type>string</A><A>, res as </A><A class=type>real</A><A> );</A> 
<BR><A>Generates textures for cubemap-material.</A> <BR><A>The material is the 
name of the cubemap-material</A> <BR><A>Res - side of the texture. It is 
recommended to align its equally deuce (64, 128, 256, etc.)</A> 
<HR>
<A name=MaterialCubeMapFromScene></A>
<H1 class=name>MaterialCubeMapFromScene </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialCubeMapFromScene =</A><A>( material as </A><A 
class=type>string</A><A>, viewer,camera,res as </A><A class=type>real</A> );</A> 
<BR><A>Commits the rendering textures for Cuba in the cubemap-material through 
the specified camera and with the settings specified type. This should specify 
the permission of rendering on the side (512, 256, 128, etc.) <BR>This feature 
allows you to get an accurate reflection of the scene. But use it with caution, 
as the high resolutions cubemap material can significantly drop in 
performance.</A> <BR><A>The material is the name of the cubemap-material</A> 
<BR><A>Viewer - view id</A> <BR><A>Camera - the camera id</A> <BR><A>Res - 
permission.</A> 
<HR>
<A name=MaterialSetAmbientColor></A>
<H1 class=name>MaterialSetAmbientColor </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetAmbientColor =</A><A>( material as </A><A 
class=type>string</A><A>, color,alpha as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the color component �mbient. The object is fully colored this 
color (if enabled lighting, the color of the Ambient will remain only in the 
shadow of the object - in other words, this component corresponds to the color 
shade).</A> <BR><A>Material - the name of the material</A> <BR><A>Color - the 
color of the</A> <BR><A>Alpha-transparency.</A> 
<HR>
<A name=MaterialSetDiffuseColor></A>
<H1 class=name>MaterialSetDiffuseColor </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetDiffuseColor =</A><A>( material as </A><A 
class=type>string</A><A>, color,alpha as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the color component of the diffuse. The color of the paints 
only illuminated part of the object.</A> <BR><A>Material - the name of the 
material</A> <BR><A>Color - the color of the</A> <BR><A>Alpha-transparency.</A> 
<HR>
<A name=MaterialSetEmissionColor></A>
<H1 class=name>MaterialSetEmissionColor </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetEmissionColor =</A><A>( material as </A><A 
class=type>string</A><A>, color,alpha as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the color component Emission. Used to simulate the luminous 
object (summed with the rest of the components, making the facility more 
bright).</A> <BR><A>Material - the name of the material</A> <BR><A>Color - the 
color of the</A> <BR><A>Alpha-transparency.</A> 
<HR>
<A name=MaterialSetSpecularColor></A>
<H1 class=name>MaterialSetSpecularColor </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetSpecularColor =</A><A>( material as </A><A 
class=type>string</A><A>, color,alpha as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the Color Specular component that corresponds to the color of 
the ����� (ppearance occurs when the direct reflection of light rays the surface 
of the object).</A> <BR><A>Material - the name of the material</A> <BR><A>Color 
- the color of the</A> <BR><A>Alpha-transparency.</A> 
<HR>
<A name=MaterialSetShininess></A>
<H1 class=name>MaterialSetShininess </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetShininess =</A><A>( material as </A><A 
class=type>string</A><A>, the shininess as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the level of mirror finish. Parameter Controls The ������ 
(Specular): The higher the value, the smaller the size of the �����. <BR>In most 
cases, the good results will give the values in the range of 10 to 30.</A> 
<BR><A>Material - the name of the material</A> <BR><A>Shininess - the level of 
shine (value from 0 to 128).</A> 
<HR>
<A name=MaterialSetPolygonMode></A>
<H1 class=name>MaterialSetPolygonMode </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetPolygonMode =</A><A>( material as </A><A 
class=type>string</A><A>, pm as </A><A class=type>real</A> );</A> <BR><A>Sets 
the display mode of the polygons (PM). You have the following options: pm</A> 
<BR><A class=constant name="">PmFill</A><A> = 0 - the polygons in the form of 
planes (the default value)</A> <BR><A class=constant name="">PmLines</A><A> = 1 
- the polygons in the form of forming lines (prefabricated display)</A> <BR><A 
class=constant name="">PmPoints</A><A> = 2 - the polygons in the form of forming 
the points.</A> <BR><A>Material - the name of the material</A> <BR><A>Pm - 
mode.</A> 
<HR>
<A name=MaterialSetTexture></A>
<H1 class=name>MaterialSetTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTexture =</A><A>( material1, material2 as </A><A 
class=type>string</A><A> );</A> <BR><A>Copies the texture of the material 2 in 
the material 1.</A> <BR><A>Material1 is the name of the material 1</A> 
<BR><A>Material2 is the name of the material 2.</A> 
<HR>
<A name=MaterialSetTextureMappingMode></A>
<H1 class=name>MaterialSetTextureMappingMode </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialSetTextureMappingMode =</A><A>( material as </A><A 
class=type>string</A><A>, tmm as </A><A class=type>real</A> );</A> <BR><A>Sets 
the Texture Projection (TMM). You have the following options: tmm</A> <BR><A 
class=constant name=tmmUser>TmmUser</A><A> = 0 - the projection on the default 
is determined by the scan of the object)</A> <BR><A class=constant 
name=tmmObjectLinear>TmmObjectLinear</A><A> = 1 - linear projection, fixed in 
relation to the object</A> <BR><A class=constant 
name=tmmEyeLinear>TmmEyeLinear</A><A> = 2 - linear projection, fixed in relation 
to the stage</A> <BR><A class=constant name=tmmSphere>TmmSphere</A><A> = 3 - 
spherical projection</A> <BR><A class=constant 
name=tmmCubeMapReflection>TmmCubeMapReflection</A><A> = 4 - cubic projection</A> 
<BR><A class=constant name=tmmCubeMapNormal>TmmCubeMapNormal</A><A> = 5 - cubic 
projection, fixed in relation to the normal indicator</A> <BR><A class=constant 
name=tmmCubeMapLight0>TmmCubeMapLight0</A><A> = 6 - there are no details</A> 
<BR><A class=constant name=tmmCubeMapCamera>TmmCubeMapCamera</A><A> = 7 - there 
are no details.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Tmm-mode.</A> 
<HR>
<A name=MaterialSetTextureImageAlpha></A>
<H1 class=name>MaterialSetTextureImageAlpha </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialSetTextureImageAlpha =</A><A>( material as </A><A 
class=type>string</A><A>, tia as </A><A class=type>real</A> );</A> <BR><A>Sets 
the transparency of texture (tia). The available values of tia:</A> <BR><A 
class=constant name=tiaDefault>TiaDefault</A><A> = 0 - the transparency of the 
default value (determined by the alpha channel)</A> <BR><A class=constant 
name=tiaAlphaFromIntensity>TiaAlphaFromIntensity</A><A> = 1 - Transparency is 
allocated from the intensity of the color (the darker the more transparent)</A> 
<BR><A class=constant 
name=tiaSuperBlackTransparent>TiaSuperBlackTransparent</A><A> = 2 - the texture 
transparent in completely black field (0,0,0)</A> <BR><A class=constant 
name=tiaLuminance>TiaLuminance</A><A> = 3 - there are no details</A> <BR><A 
class=constant name=tiaLuminanceSqrt>TiaLuminanceSqrt</A><A> = 4 - there are no 
details</A> <BR><A class=constant name=tiaOpaque>TiaOpaque</A><A> = 5 - Full 
Opacity</A> <BR><A class=constant 
name=tiaTopLeftPointColorTransparent>TiaTopLeftPointColorTransparent</A><A> = 6 
- the texture transparent in places of one color with the left lower corner of 
the Images</A> <BR><A class=constant 
name=tiaInverseLuminance>TiaInverseLuminance</A><A> = 7 - there are no 
details</A> <BR><A class=constant 
name=tiaInverseLuminanceSqrt>TiaInverseLuminanceSqrt</A><A> = 8 - there are no 
details</A> <BR><A>Material - the name of the material</A> <BR><A>Tia - 
mode.</A> 
<HR>
<A name=MaterialSetTextureScale></A>
<H1 class=name>MaterialSetTextureScale </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureScale =</A><A>( material as </A><A 
class=type>string</A><A>, u,v as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the size of the texture.</A> <BR><A>Material - the name of the 
material</A> <BR><A>U,v - the size of the image horizontally and vertically.</A> 

<HR>
<!--
<A name="MaterialGetFromLib"></A>
<H1 class=name>MaterialGetFromLib</H1>
<A class=type>real</A><A> = </A><A class=function>MaterialGetFromLib</A><A>( material1,material2 as </A><A class=type>string</A><A> );</A>
<BR><A>�������� �����������.</A>
<BR><A>material1 - �������� �����������</A>
<BR><A>material2 - �������� �����������.</A>
<HR>
--><A name=MaterialSetTextureOffset></A>
<H1 class=name>MaterialSetTextureOffset </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureOffset =</A><A>( material as </A><A 
class=type>string</A><A>, u,v as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the offset of the texture.</A> <BR><A>Material - the name of 
the material</A> <BR><A>U,v - offset horizontally and vertically.</A> 
<HR>
<A name=MaterialSetTextureMode></A>
<H1 class=name>MaterialSetTextureMode </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureMode =</A><A>( material as </A><A 
class=type>string</A><A>, tm as </A><A class=type>real</A> );</A> <BR><A>Sets 
the texture (tm). You have the following options: tm</A> <BR><A class=constant 
name=tmDecal>TmDecal</A><A> = 0 - Fill with transparency</A> <BR><A 
class=constant name=tmModulate>TmModulate</A><A> = 1 - Fill with transparency 
and color mixing (uses the Diffuse)</A> <BR><A class=constant 
name=tmBlend>TmBlend</A><A> = 2 - there are no details</A> <BR><A class=constant 
name=tmReplace>TmReplace</A><A> = 3 - full replacement (without transparency and 
mixing)</A> <BR><A>Material - the name of the material</A> <BR><A>Tm-mode.</A> 
<HR>
<A name=MaterialSetBlendingMode></A>
<H1 class=name>MaterialSetBlendingMode </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetBlendingMode =</A><A>( material as </A><A 
class=type>string</A><A>, the bm as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the mode mixing (BM). You have the following options: bm</A> 
<BR><A class=constant name=bmOpaque>BmOpaque</A><A> = 0 - lack of transparency 
and blending (full replacement)</A> <BR><A class=constant 
name=bmTransparency>BmTransparency</A><A> = 1 - use transparency or Alpha 
Channel</A> <BR><A class=constant name=bmAdditive>BmAdditive</A><A> = 2 - used 
summation of flowers</A> <BR><A class=constant 
name=bmAlphaTest50>BmAlphaTest50</A><A> = 3 - use the alpha test at 50% 
(Transparency below 0.5 is treated as full transparency above - Full 
Opacity)</A> <BR><A class=constant name=bmAlphaTest100>BmAlphaTest100</A><A> = 4 
- Use of alpha-test at 100% (Transparency below 1.0 is treated as full 
transparency above - Full Opacity)</A> <BR><A class=constant 
name=bmModulate>BmModulate</A><A> = 5 - used modulation (multiplication) 
colors.</A> <BR><A>Material - the name of the material</A> <BR><A>Bm-mode.</A> 
<HR>
<A name=MaterialSetTextureFilter></A>
<H1 class=name>MaterialSetTextureFilter </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureFilter =</A><A>( material as </A><A 
class=type>string</A><A>, mi,ma as </A><A class=type>real</A> );</A> 
<BR><A>There are no details.</A> <BR><A class=constant 
name=miNearest>MiNearest</A><A> = 0 - there are no details</A> <BR><A 
class=constant name=miLinear>MiLinear</A><A> = 1 - there are no details</A> 
<BR><A class=constant name=miNearestMipmapNearest>MiNearestMipmapNearest</A><A> 
= 2 - there are no details</A> <BR><A class=constant 
name=miLinearMipmapNearest>MiLinearMipmapNearest</A><A> = 3 - there are no 
details</A> <BR><A class=constant 
name=miNearestMipmapLinear>MiNearestMipmapLinear</A><A> = 4 - there are no 
details</A> <BR><A class=constant 
name=miLinearMipmapLinear>MiLinearMipmapLinear</A><A> = 5 - there are no 
details</A> <BR><A class=constant name=maNearest>MaNearest</A><A> = 0 - there 
are no details</A> <BR><A class=constant name=maLinear>MaLinear</A><A> = 1 - 
there are no details</A> <BR><A>Material - the name of the material</A> 
<BR><A>Mi - there are no details</A> <BR><A>Ma - there are no details.</A> 
<HR>
<A name=MaterialEnableTexture></A>
<H1 class=name>MaterialEnableTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialEnableTexture =</A><A>( material as </A><A 
class=type>string</A><A>, mode as </A><A class=type>real</A> );</A> 
<BR><A>Enables or disables the display of texture.</A> <BR><A>Material - the 
name of the material</A> <BR><A>Mode - </A><A class=constant>true</A><A> or 
</A><A class=constant>false</A><A> (1 and 0, respectively).</A> 
<HR>
<A name=MaterialLoadTexture></A>
<H1 class=name>MaterialLoadTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLoadTexture =</A><A>( material,filename as </A><A 
class=type>string</A><A> );</A> <BR><A>Uploads the material texture.</A> 
<BR><A>Material - the name of the material</A> <BR><A>Filename is the path to 
the texture.</A> 
<HR>
<A name=MaterialGetCount></A>
<H1 class=name>MaterialGetCount </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialGetCount =</A><A>();</A> <BR><A>Returns the total number 
of materials in the library.</A> 
<HR>
<A name=MaterialGetName></A>
<H1 class=name>MaterialGetName </H1><A class=type>String</A><A> = </A><A 
class=function>MaterialGetName</A><A>(ind </A><A class=type>real</A>);</A> 
<BR><A>Returns the name of the material specified numbers.</A> <BR><A>Ind - the 
number of the material in the library.</A> 
<HR>
<A name=MaterialGetNameFromLibrary></A>
<H1 class=name>MaterialGetNameFromLibrary </H1><A class=type>String</A><A> = 
</A><A class=function>MaterialGetNameFromLibrary</A><A>(matlib, ind </A><A 
class=type>real</A>);</A> <BR><A>Returns the name of the material specified 
numbers in the selected library materials.</A> <BR><A>Matlib - id of the library 
materials</A> <BR><A>Ind - the number of the material in the library.</A> 
<HR>
<A name=MaterialSetFaceCulling></A>
<H1 class=name>MaterialSetFaceCulling </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetFaceCulling =</A><A>( material as </A><A 
class=type>string</A><A>, fc as </A><A class=type>real</A> );</A> <BR><A>Sets 
the visibility of the selection of polygons (FC). The available values of 
fc:</A> <BR><A class=constant name=fcBufferDefault>FcCull</A><A> = 0 - Default 
Value</A> <BR><A class=constant name=fcCull>FcCull</A><A> = 1 - selection of 
visibility is turned on</A> <BR><A class=constant name=fcNoCull>FcNoCull</A><A> 
= 2 - selection of visibility is turned off.</A> <BR><A>Material - the name of 
the material</A> <BR><A>Fc - the selection of visibility.</A> 
<HR>
<A name=MaterialSetSecondTexture></A>
<H1 class=name>MaterialSetSecondTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetSecondTexture =</A><A>( material1,material2 as </A><A 
class=type>string</A><A> );</A> <BR><A>Loads the material 1 the second texture 
from the material 2. The second texture rests on top of the first and uses a 
second set of texture coordinates (if it's not, used first).</A> 
<BR><A>Material1 is the name of the material 1</A> <BR><A>Material2 is the name 
of the material 2.</A> 
<HR>
<A name=MaterialSetTextureFormat></A>
<H1 class=name>MaterialSetTextureFormat </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureFormat =</A><A>( material as </A><A 
class=type>string</A><A>, tf as </A><A class=type>real</A> );</A> 
<BR><A>Specifies the format of the texture storage in memory (Tf - not to be 
confused with The TextureFilter). The available values of tf:</A> <BR><A 
class=constant name=tfDefault>TfDefault</A><A> = 0 is the default format (</A><A 
class=constant>tfRGBA</A><A>)</A> <BR><A class=constant name=tfRGB>TfRGB</A><A> 
= 1 - 24-bit RGB, 8 bits on the component, without the alpha channel</A> <BR><A 
class=constant name=tfRGBA>TfRGBA</A><A> = 2 - 32-Bit RGBA, 8-bits per component 
that includes the alpha channel</A> <BR><A class=constant 
name=tfRGB16>TfRGB16</A><A> = 3 - 16-bit RGB, without the alpha channel</A> 
<BR><A class=constant name=tfRGBA16>TfRGBA16</A><A> = 4 - 16-Bit RGBA, Includes 
Alpha Channel</A> <BR><A class=constant name=tfAlpha>TfAlpha</A><A> = 5 - only 
8-bit alpha channel without color</A> <BR><A class=constant 
name=tfLuminance>TfLuminance</A><A> = 6 - only 8-bit component brightness, 
without the alpha channel</A> <BR><A class=constant 
name=tfLuminanceAlpha>TfLuminanceAlpha</A><A> = 7 - only 8-bit component 
brightness, Includes Alpha Channel</A> <BR><A class=constant 
name=tfIntensity>TfIntensity</A><A> = 8 - only 8-bit component of the 
saturation, without the alpha channel</A> <BR><A class=constant 
name=tfNormalMap>TfNormalMap</A><A> = 9 - 24-bit RGB normal map generated by the 
original textures</A> <BR><A class=constant 
name=tfRGBAFloat16>TfRGBAFloat16</A><A> = 10 - 16-Bit RGBA for floating-point, 
Includes Alpha Channel</A> <BR><A class=constant 
name=tfRGBAFloat32>TfRGBAFloat32</A><A> = 11 - 32-Bit RGBA for floating-point, 
includes the alpha channel.</A> <BR>The last two formats require the support 
expansion of the GL_ATI_texture_float. <BR><A>Material - the name of the 
material</A> <BR><A>Tf - format.</A> 
<HR>
<A name=MaterialSetTextureCompression></A>
<H1 class=name>MaterialSetTextureCompression </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialSetTextureCompression =</A><A>( material as </A><A 
class=type>string</A><A>, tc as </A><A class=type>real</A> );</A> <BR><A>Sets 
the texture compression (TC). The compression saves memory, but can reduce 
performance. <BR>You have the following options: tc</A> <BR><A class=constant 
name=tcDefault>TcDefault</A><A> = 0 - compression by default</A> <BR><A 
class=constant name=tcNone>TcNone</A><A> = 1 - Do not use the compression</A> 
<BR><A class=constant name=tcStandard>TcStandard</A><A> = 2 - Standard 
Compression (average quality and speed of decompression)</A> <BR><A 
class=constant name=tcHighQuality>TcHighQuality</A><A> = 3 - high quality, low 
speed decompression</A> <BR><A class=constant 
name=tcHighSpeed>TcHighSpeed</A><A> = 4 - High Speed decompression, low 
quality.</A> <BR><A>Material - the name of the material</A> <BR><A>Tc mode.</A> 
<HR>
<A name=MaterialTextureRequiredMemory></A>
<H1 class=name>MaterialTextureRequiredMemory </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialTextureRequiredMemory =</A><A>( material as </A><A 
class=type>string</A><A> );</A> <BR><A>Returns the amount of memory footprint 
texture (in bytes).</A> <BR><A>The material is the name of the material.</A> 
<HR>
<A name=MaterialSetFilteringQuality></A>
<H1 class=name>MaterialSetFilteringQuality </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetFilteringQuality =</A><A>( material as </A><A 
class=type>string</A><A>, tf as </A><A class=type>real</A> );</A> <BR><A>Sets 
the texture filtering (Tf - not to be confused with The TextureFilter and 
TextureFormat). Filtering occurs when the mip-level of the texture becomes more 
or less than the image of the original. The available values of tf:</A> <BR><A 
class=constant name=tfIsotropic>TfIsotropic</A><A> = 0 - isotropic filtering 
of</A> <BR><A class=constant name=tfAnisotropic>TfAnisotropic</A><A> = 1 - 
Anisotropic filtering.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Tf - mode.</A> 
<HR>
<A name=MaterialSetOptions></A>
<H1 class=name>MaterialSetOptions </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetOptions =</A><A>( material as </A><A 
class=type>string</A><A>, the fog,lighting as </A><A class=type>real</A> );</A> 
<BR><A>Enables or disables the effect of fog (fog) and light (lighting) in the 
material. <BR><A>Material - the name of the material</A> <BR><A>Fog - </A><A 
class=constant>true</A><A> or </A><A class=constant>false</A><A> (1 and 0 
respectively)</A> <BR><A>Lighting - </A><A class=constant>true</A><A> or </A><A 
class=constant>false</A><A> (1 and 0, respectively).</A> 
<HR>
<A name=MaterialSetShader></A>
<H1 class=name>MaterialSetShader </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetShader =</A><A>( material as </A><A 
class=type>string</A><A>, shader as </A><A class=type>real</A> );</A> 
<BR><A>Applies to the material shader.</A> <BR><A>Material - the name of the 
material</A> <BR><A>Shader - id shader.</A> 
<HR>
<A name=MaterialSetTextureWrap></A>
<H1 class=name>MaterialSetTextureWrap </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureWrap =</A><A>( material,mode as </A><A 
class=type>string</A><A> );</A> <BR><A>Switches the repetition of textures, when 
UV-coordinates outside the range [0..1].</A> <BR><A>Material - the name of the 
material</A> <BR><A>Mode - </A><A class=constant>true</A><A> or </A><A 
class=constant>false</A><A> (1 and 0, respectively).</A> 
<HR>
<A name=MaterialGetTextureWidth></A>
<H1 class=name>MaterialGetTextureWidth </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialGetTextureWidth =</A><A>( material as </A><A 
class=type>string</A><A> );</A> <BR><A>Returns the width of the texture of the 
material. If there is no material texture, the function returns 0.</A> 
<BR><A>The material is the name of the material.</A> 
<HR>
<A name=MaterialGetTextureHeight></A>
<H1 class=name>MaterialGetTextureHeight </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialGetTextureHeight =</A><A>( material as </A><A 
class=type>string</A><A> );</A> <BR><A>Returns the height of the texture of the 
material. If there is no material texture, the function returns 0.</A> 
<BR><A>The material is the name of the material.</A> 
<HR>
<A name=MaterialGenTexture></A>
<H1 class=name>MaterialGenTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialGenTexture =</A><A>( material,width,height as </A><A 
class=type>string</A><A> );</A> <BR><A>Creates an empty texture of the 
material.</A> <BR><A>Material - the name of the material</A> <BR><A>Width,height 
- the width and height of the texture.</A> 
<HR>
<A name=MaterialLoadTexture></A>
<H1 class=name>MaterialLoadTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLoadTexture =</A><A>( material,filename as </A><A 
class=type>string</A><A> );</A> <BR><A>Loads the material texture from the 
file.</A> <BR><A>Material - the name of the material</A> <BR><A>Filename is the 
path to the image file.</A> 
<HR>
<A name=MaterialSaveTexture></A>
<H1 class=name>MaterialSaveTexture </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSaveTexture =</A><A>( material,filename as </A><A 
class=type>string</A><A> );</A> <BR><A>Retains the texture of the material in 
the BMP file.</A> <BR><A>Material - the name of the material</A> <BR><A>Filename 
is the name of the file.</A> 
<HR>
<A name=MaterialLoadTextureEx></A>
<H1 class=name>MaterialLoadTextureEx </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialLoadTextureEx =</A><A>( material,filename as </A><A 
class=type>string</A><A>, index as </A><A class=type>real</A><A> );</A> 
<BR><A>Loads the material texture in the texture slot. There are 8 slots. The 
first two slots (0 and 1) replaces the first and the second own textures of the 
material.</A> <BR><A>Material - the name of the material</A> <BR><A>Filename is 
the path to the image file</A> <BR><A>Index - the index of the slot texture 
(from 0 to 7 inclusive).</A> 
<HR>
<A name=MaterialSetTextureEx></A>
<H1 class=name>MaterialSetTextureEx </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetTextureEx =</A><A>( material1,material2 as </A><A 
class=type>string</A><A>, index as </A><A class=type>real</A><A> );</A> 
<BR><A>Copies the texture of the material 2 in the specified texture of the 
material slot 1.</A> <BR><A>Material1 is the name of the material 1</A> 
<BR><A>Material2 is the name of the material 2</A> <BR><A>Index - the index of 
the slot texture (from 0 to 7 inclusive).</A> 
<HR>
<A name=MaterialSetTextureExFromLibrary></A>
<H1 class=name>MaterialSetTextureExFromLibrary </H1><A class=type>Real</A><A> 
</A><A class=function>MaterialSetTextureExFromLibrary =</A><A>( material1 as 
</A><A class=type>string</A><A>, matlib as </A><A class=type>real</A><A>, 
material2 as </A><A class=type>string</A><A>, index as </A><A 
class=type>real</A><A> );</A> <BR><A>Copies the texture of the material 2 from 
the set of the library materials in the specified texture of the material slot 
1.</A> <BR><A>Material1 is the name of the material 1</A> <BR><A>Matlib - id of 
the library materials</A> <BR><A>Material2 is the name of the material 2 in the 
library of matlib</A> <BR><A>Index - the index of the slot texture (from 0 to 7 
inclusive).</A> 
<HR>
<A name=MaterialGenTextureEx></A>
<H1 class=name>MaterialGenTextureEx </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialGenTextureEx =</A><A>( material as </A><A 
class=type>string</A><A>, index,width,height as </A><A class=type>real</A><A> 
);</A> <BR><A>Creates an empty texture in the specified slot ���������� 
material.</A> <BR><A>Material - the name of the material</A> <BR><A>Index - the 
index of the slot texture (from 0 to 7 inclusive)</A> <BR><A>Width,height - the 
width and height of the texture.</A> 
<HR>
<A name=MaterialEnableTextureEx></A>
<H1 class=name>MaterialEnableTextureEx </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialEnableTextureEx =</A><A>( material as </A><A 
class=type>string</A><A>, index,mode as </A><A class=type>real</A><A> );</A> 
<BR><A>Enables or disables the texture in the specified slot ���������� 
material.</A> <BR><A>Material - the name of the material</A> <BR><A>Index - the 
index of the slot texture (from 0 to 7 inclusive)</A> <BR><A>Mode - </A><A 
class=constant>true</A><A> or </A><A class=constant>false</A><A> (1 and 0, 
respectively).</A> 
<HR>
<A name=MaterialHasTextureEx></A>
<H1 class=name>MaterialHasTextureEx </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialHasTextureEx =</A><A>( material as </A><A 
class=type>string</A><A>, index as </A><A class=type>real</A><A> );</A> 
<BR><A>Returns 1, if the material is the texture in the specified ���������� 
slot and 0 otherwise.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Index - the index of the slot texture (from 0 to 7 inclusive).</A> 
<HR>
<A name=MaterialCullFrontFaces></A>
<H1 class=name>MaterialCullFrontFaces </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialCullFrontFaces =</A><A>( material as </A><A 
class=type>string</A><A>, mode as </A><A class=type>real</A><A> );</A> 
<BR><A>Specifies the side of the amputation of the facets. If this option is 
enabled, The ���������� will be the front edge, otherwise (by default) - 
rear.</A> <BR><A>Material - the name of the material</A> <BR><A>Mode - </A><A 
class=constant>true</A><A> or </A><A class=constant>false</A><A> (1 and 0, 
respectively).</A> 
<HR>
<A name=MaterialSetZWrite></A>
<H1 class=name>MaterialSetZWrite </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialSetZWrite =</A><A>( material as </A><A 
class=type>string</A><A>, mode as </A><A class=type>real</A><A> );</A> 
<BR><A>Enables or disables the entry in the Z-buffer.</A> <BR><A>Material - the 
name of the material</A> <BR><A>Mode - </A><A class=constant>true</A><A> or 
</A><A class=constant>false</A><A> (1 and 0, respectively).</A> 
<HR>
<A name=MaterialNoiseCreate></A>
<H1 class=name>MaterialNoiseCreate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseCreate =</A><A>( material as </A><A 
class=type>string</A><A> );</A> <BR><A>Creates a material with procedurally 
generated noise texture Perlyna.</A> <BR><A>The material is the name of the 
material.</A> 
<HR>
<A name=MaterialNoiseSetDimensions></A>
<H1 class=name>MaterialNoiseSetDimensions </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseSetDimensions =</A><A>( material as </A><A 
class=type>string</A><A>, the width,height as </A><A 
class=type>real</A><A>);</A> <BR><A>Specifies the resolution textures of 
noise.</A> <BR><A>Material - the name of the material</A> <BR><A>Width,height - 
the width and height of the texture.</A> 
<HR>
<A name=MaterialNoiseAnimate></A>
<H1 class=name>MaterialNoiseAnimate </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseAnimate =</A><A>( material as </A><A 
class=type>string</A><A>, speed as </A><A class=type>real</A><A>);</A> 
<BR><A>��������� texture noise (generates a new image, close to the 
original).</A> <BR><A>Material - the name of the material</A> <BR><A>Speed is 
the speed.</A> 
<HR>
<A name=MaterialNoiseSetMinCut></A>
<H1 class=name>MaterialNoiseSetMinCut </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseSetMinCut =</A><A>( material as </A><A 
class=type>string</A><A>, The mincut as </A><A class=type>real</A><A>);</A> 
<BR><A>There are no details.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Mincut - there are no details.</A> 
<HR>
<A name=MaterialNoiseSetSharpness></A>
<H1 class=name>MaterialNoiseSetSharpness </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseSetSharpness =</A><A>( material as </A><A 
class=type>string</A><A>, sharpness as </A><A class=type>real</A><A>);</A> 
<BR><A>There are no details.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Sharpness - there are no details.</A> 
<HR>
<A name=MaterialNoiseSetSeamless></A>
<H1 class=name>MaterialNoiseSetSeamless </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseSetSeamless =</A><A>( material as </A><A 
class=type>string</A><A>, mode as </A><A class=type>real</A><A>);</A> 
<BR><A>Switches The ����������� textures of noise.</A> <BR><A>Material - the 
name of the material</A> <BR><A>Mode - </A><A class=constant>true</A><A> or 
</A><A class=constant>false</A><A> (1 and 0, respectively).</A> 
<HR>
<A name=MaterialNoiseRandomSeed></A>
<H1 class=name>MaterialNoiseRandomSeed </H1><A class=type>Real</A><A> </A><A 
class=function>MaterialNoiseRandomSeed =</A><A>( material as </A><A 
class=type>string</A><A>, seed as </A><A class=type>real</A><A>);</A> 
<BR><A>There are no details.</A> <BR><A>Material - the name of the material</A> 
<BR><A>Seed - there are no details.</A> 
<HR>
</DIV></BODY></HTML>

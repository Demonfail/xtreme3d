<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Primitive</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type><LINK 
rel=stylesheet type=text/css href="../data/style.css">
<META name=GENERATOR content="MSHTML 8.00.6001.23536"></HEAD>
<BODY>
<DIV align=justify>
<H1 class=pagetitle>Primitives </H1><A class=type>Class: TGLPlane, TGLCube, 
TGLSphere, TGLCylinder, TGLCone, TGLAnnulus, TGLTorus, TGLDisk, TGLFrustrum, 
TGLDodecahedron, TGLIcosahedron, TGLTeapot</A><BR><BR><A>The entities 
(Primitive) - the simplest geometric body, which are generated by the engine. 
The ���������� include plane (plane), cube (cube), the sphere (sphere), the 
cylinder (cylinder), cone (cone), a hollow cylinder (annulus), Thor (torus), the 
disk (disk), a truncated pyramid (frustrum), the dodecahedron dodecahedron (), 
�������� (icosahedron) and the kettle Utah (teapot).</A> <BR>
<HR>
<A name=PlaneCreate></A>
<H1 class=name>PlaneCreate </H1><A class=type>Real</A><A> </A><A 
class=function>PlaneCreate =</A><A>( 
singlequad,width,height,xtiles,ytiles,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a plane and returns its id.</A> 
<BR><A>Singlequad - Specifies whether to break the plane of the grid, or submit 
it one square is </A><A class=constant>false</A><A> or </A><A 
class=constant>true</A><A> (0 and 1, respectively). When using the light, as a 
rule, it is better to break the plane.</A> <BR><A>Width,height - the width and 
height of the plane</A> <BR><A>Xtiles,ytiles - when singlequad = 0 Sets the 
number of cells in the grid horizontally and vertically</A> <BR><A>Parent - the 
parent id for the plane (0 - no parents).</A> 
<HR>
<A name=CubeCreate></A>
<H1 class=name>CubeCreate </H1><A class=type>Real</A><A> </A><A 
class=function>CubeCreate =</A><A>( width,height,depth,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a cube (strictly speaking, the 
rectangular parallelepiped) and returns its id.</A> <BR><A>Width,height,depth - 
width, height, and longitude of Cuba</A> <BR><A>Parent - the parent id to Cuba 
(0 - lack of parents).</A> 
<HR>
<A name=CubeSetNormalDirection></A>
<H1 class=name>CubeSetNormalDirection </H1><A class=type>Real</A><A> </A><A 
class=function>CubeSetNormalDirection =</A><A>( cube,nd as </A><A 
class=type>real</A><A> );</A> <BR><A>Determines the direction of the normal 
Cuba. You have the following options nd:</A> <BR><A class=constant 
name=ndOutside>NdOutside</A><A> = 0 - normal directed inward (the default 
value)</A> <BR><A class=constant name=ndInside>NdInside</A><A> = 1 - normal 
pointing outwards.</A> <BR><A>Cube - id Cuba</A> <BR><A>Nd - the direction of 
normal.</A> 
<HR>
<A name=SphereCreate></A>
<H1 class=name>SphereCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>SphereCreate</A><A>radius(,slices,stacks,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates and returns its id.</A> 
<BR><A>Radius is the radius of the Sphere</A> <BR><A>Slices,stacks - sets the 
number of meridian and Parallels</A> <BR><A>Parent - the parent id for the 
sphere of (0 - lack of parents).</A> 
<HR>
<A name=SphereSetAngleLimits></A>
<H1 class=name>SphereSetAngleLimits </H1><A class=type>Real</A><A> </A><A 
class=function>SphereSetAngleLimits =</A><A>( sphere,start,stop,top,bottom as 
</A><A class=type>real</A><A>);</A> <BR><A>There are no details.</A> 
<BR><A>Sphere - id scope</A> <BR><A>Start,stop - no information</A> 
<BR><A>Top,bottom - information about missing.</A> 
<HR>
<A name=CylinderCreate></A>
<H1 class=name>CylinderCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>CylinderCreate</A> <A>( 
topradius,bottomradius,height,slices,stacks,loops,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a cylinder and returns its id.</A> 
<BR><A>Topradius - the radius of the upper grounds</A> <BR><A>Bottomradius - the 
radius of the lower grounds</A> <BR><A>Height - The height (default: 1)</A> 
<BR><A>Slices,stacks,loops - sets the number of fins, segments and concentric 
circles</A> <BR><A>Parent - the parent id for cylinder (0 - lack of 
parents).</A> 
<HR>
<A name=ConeCreate></A>
<H1 class=name>ConeCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>ConeCreate</A> <A>( 
bottomradius,height,slices,stacks,loops,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a cone and returns its id.</A> 
<BR><A>Bottomradius - the radius of the grounds</A> <BR><A>Height - The height 
(default: 1)</A> <BR><A>Slices,stacks,loops - sets the number of fins, segments 
and concentric circles</A> <BR><A>Parent - the parent id for the cone (0 - lack 
of parents).</A> 
<HR>
<A name=AnnulusCreate></A>
<H1 class=name>AnnulusCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>AnnulusCreate</A> <A>( 
innerradius,outerradius,height,slices,stacks,loops,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a hollow cylinder (ring) and returns 
its id.</A> <BR><A>Innerradius - the radius of the inner edge of the</A> 
<BR><A>Outerradius - the radius of the outer circumference</A> <BR><A>Height - 
The height (default: 1)</A> <BR><A>Slices,stacks,loops - sets the number of 
fins, segments and concentric circles</A> <BR><A>Parent - the parent id for a 
hollow cylinder (0 - lack of parents).</A> 
<HR>
<A name=TorusCreate></A>
<H1 class=name>TorusCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>TorusCreate</A> <A>( 
innerradius,outerradiusrings,rings,sides,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a torus and returns its id. Thor is 
a body that resembles a donut.</A> <BR><A>Innerradius - the radius of the inner 
edge of the</A> <BR><A>Outerradius - the radius of the outer circumference</A> 
<BR><A>Rings,attribute - sets the number of rings and segments</A> <BR><A>Parent 
- the parent id for the ������� (0 - lack of parents).</A> 
<HR>
<A name=DiskCreate></A>
<H1 class=name>DiskCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>DiskCreate</A> <A>( 
innerradius,outerradius,startangle,sweepangle,loops,slices,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a disk and returns its id.</A> 
<BR><A>Innerradius - the radius of the inner edge of the</A> <BR><A>Outerradius 
- the radius of the outer circumference</A> <BR><A>Startangle,sweepangle - the 
starting and ending angle of the sector. For the closed disk these values are 0, 
360</A> <BR><A>Loops,slices - sets the number of concentric circles and ribs</A> 
<BR><A>Parent - the parent id for a hollow cylinder (0 - lack of parents).</A> 
<HR>
<A name=FrustrumCreate></A>
<H1 class=name>FrustrumCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>FrustrumCreate</A> <A>( 
basewidth,basedepth,apexheight,cutheight,parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a truncated pyramid and returns its 
id.</A> <BR><A>Basewidth,basedepth - the width and depth of the base of the</A> 
<BR><A>Apexheight - the height of the ������ (tops, �������������� the base)</A> 
<BR><A>Cutheight - the height of the amputation</A> <BR><A>Parent - the parent 
id for a truncated pyramid (0 - lack of parents).</A> 
<HR>
<A name=DodecahedronCreate></A>
<H1 class=name>DodecahedronCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>DodecahedronCreate</A> <A>( parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates a dodecahedron (a polyhedron, 
compiled from 12 correct ��������������) and returns its id.</A> <BR><A>Parent - 
the parent id for the dodecahedron (0 - lack of parents).</A> 
<HR>
<A name=IcosahedronCreate></A>
<H1 class=name>IcosahedronCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>IcosahedronCreate</A> <A>( parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates The �������� (a polyhedron, compiled 
from 20 �������������� triangles) and returns its id.</A> <BR><A>Parent - the id 
of the parent of the icosahedrons (0 - lack of parents).</A> 
<HR>
<A name=TeapotCreate></A>
<H1 class=name>TeapotCreate </H1><A class=type>Real</A><A> = </A><A 
class=function>TeapotCreate</A> <A>( parent as </A><A 
class=type>real</A><A>);</A> <BR><A>Creates the maker of Utah and returns its 
id.</A> <BR><A>Parent - the parent id for the kettle (0 - lack of parents).</A> 
<HR>
</DIV></BODY></HTML>

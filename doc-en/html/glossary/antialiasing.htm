<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Anti-aliasing</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type><LINK 
rel=stylesheet type=text/css href="../data/style.css">
<META name=GENERATOR content="MSHTML 8.00.6001.23536"></HEAD>
<BODY>
<DIV align=justify>
<H1 class=name>Anti-Aliasing </H1><A class=type>Anti-Aliasing | 
Anti-aliasing</A> 
<HR>
<A>Method of interpolation of pixels to obtain a better picture quality. The 
basic principle of smoothing - the use of intermediate shades of color on the 
borders of the image for a visual fix artifact bitmap ("step"). 
<BR>Anti-aliasing was first used in 1972 in Massachusetts Institute of 
Technology The group Architecture Machine Group, which later became the main 
part of the Media Lab. <BR>To date, there are three main groups of methods of 
smoothing: <BR>- Vectorized big ������������� images with subsequent decrease in 
resolution and interpolation; <BR>- Smoothing, realized as a postprocessing 
filter over The ������������� shot; <BR>- Specialized smoothing algorithms, 
working on the images of a specific type, for example, the algorithm by Wu for 
drawing line segments). <BR><BR><B>The smoothing methods 
</B><BR><BR><B>Excessive anti-aliasing</B> (supersample anti-aliasing, 
abbreviated<B> WWYY</B>) allows you to completely eliminate the characteristic 
"ladder" on the borders of polygons by the actual rendering in higher 
resolution. In the simplest version of the resolution doubles (2xSSAA), and each 
pixel in the final image is assigned the average color of the ����������� 4. 
Excessive smoothing consumes a lot of computing resources, resulting in a drop 
in frame rate, as well as very much depends on the performance of video memory, 
so the speed graphics with fast memory will be able to calculate the full screen 
anti-aliasing with less disruption to performance than the graphics card of the 
lower class. <BR><BR><B>The adaptive anti-aliasing</B> (multisample 
anti-aliasing, abbreviated to<B> MSAA</B>) - Optimize WWYY, reduces the amount 
of work related to the ������������. If the current final pixel belongs fully to 
the �������������� triangle, the calculation of the color (����������� shader) 
is performed only once. In fact, this method increases the authorization only 
when rendering pixels belonging to the edges of the polygons that significantly 
improves overall performance. As a result, the MSAA well shows himself, if 
objects ������������� relatively homogeneous colors - Its main disadvantage is 
the complete lack of smoothing inside the polygon. This is especially 
noticeable, for example, when rendering glare, reflections and �����������. 
<BR>MSAA support, as a rule, embedded in the video driver - this is one of the 
basic methods of smoothing, available to many applications out of the box. 
<BR><BR><B>The rapid approximation of anti-aliasing</B> (fast approximate 
anti-aliasing, abbreviated<B> FXAA</B>) - a method of smoothing, proposed in 
2011 by NVIDIA and represents a single-pass pixel shader. FXAA analyzes the 
image, determining the contrast field and blurring them. The method is more 
effective than MSAA, and smooths out not only the edges of the polygons, but the 
inside. FXAA is one of the most popular today methods of smoothing, represents 
an excellent compromise between performance and the quality of the result. 
<BR><BR><B>Smoothing can be reviewed</B> (multiframe sampled anti-aliasing, 
abbreviated<B> MFAA</B>) is a variant of the MSAA from NVIDIA, ������������� 
last two ������������� frames using different positions for The �����������. 
Thanks to the switchin positions of the samples, 4xMFAA nearly as fast as the 
2xMSAA but provides quality images at the level of the 4xMSAA. <BR><BR>There are 
a lot of other methods of smoothing, about which we, in order to save space, we 
will not tell in detail - you can find information about them on the Internet: 
<BR><BR><B>DLAA</B> is directionally localized anti-aliasing <BR><B>EQAA</B> - 
enhanced quality anti-aliasing <BR><B>EdgeAA</B> - edge anti-aliasing 
<BR><B>GPAA</B> - geometric post-process anti-aliasing <BR><B>GBAA</B> - 
geometry buffer anti-aliasing <BR><B>MLAA</B> - morphological anti-aliasing 
<BR><B>NFAA</B> - normal filter anti-aliasing <BR><B>SRAA</B> - the 
reconstruction subpixel anti-aliasing <BR><B>SDAA</B> - second depth 
anti-aliasing <BR><B>SMAA</B> - morphological subpixel anti-aliasing 
<BR><B>TAA</B> - transparent anti-aliasing <BR><B>TXAA</B> - temporal 
anti-aliasing </A><BR><BR><A>See also </A><A class=link 
href="pixel.htm"></A><A>, Pixel </A><A class=link 
href="interpolation.htm">Interpolation</A><A>.</A> 
<HR>
</DIV></BODY></HTML>

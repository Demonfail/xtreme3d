<HTML>
<HEAD>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<TITLE>1</title>
<LINK href="../data/style.css" type=text/css rel=stylesheet>
</HEAD>
<BODY>

<div align=justify>

<h1 class=name>1</H1>
<a class=type>Transformation | Transforming</a>
<HR>
<A>
Linear operation on geometry (usually a set of vertices).
<br>Under the conversion in graphics engines is generally implied an affine transformation - that is, conversion, the event straight lines straight and flat surface is flat. Such changes include the shift, rotate, scale, offset and mirroring, as well as their combination in any order. But to change also applies, for example, the Perspective projection, which is not an affine transformation.
<br>for submission of an affine transformation use, as a rule, Matrix 4x4, where the upper left подматрица specifies the rotation and scale, the right-hand column is offset, and the bottom line is always equal to [0, 0, 0, 1]. The multiplication of matrices transformation gives a matrix in which these two conversions combined (in the order in which produced multiplication). In game graphics engines typically use the following procedure for the перемножений: Transfer * * rotation scaling. The resulting matrix (also referred to as its model) is transferred to the graphics conveyor. The аффинную matrix can be inverted, i.e., calculate its inverse matrix - it will represent the inverse transform, which is very often used in computer graphics. Some of the properties of affine matrices, they can invert very efficiently.
<br>Say that model the matrix moves the top of the model space (where the coordinates of the vertices are defined relative to the center of the model) into the world space (where the coordinates are defined relative to the absolute center of the scene). This process is the first stage of the graphics pipeline and is the vertex processor graphics card. When using shaders programr has the ability to program this stage in вершинном шейдере.
In addition to the matrices, affine transformation is also possible using the кватернионов and dual кватернионов.  ватернионы are used for storage of rotation (including drawn), dual кватернионы - for simultaneous storage of rotation and transfer.
<br>The main advantages of the кватернионов - computational efficiency and save memory (4 numbers instead of 16 matrices) and the possibility of interpolation.  ватернионы are widely used in the skeletal animation, kinematics and physics, but the graphics pipeline, they usually are not transferred - all conversion for this translated into a matrix.
</a>
<br>
<br><A>See also </a>
<a class=link href="matrix.htm">Matrix</a><A>, </a>
<a class=link href="vector.htm">Vector</a><A>.</a>
<HR>
</DIV>

</BODY>
</HTML>